class Solution {
    public int evalRPN(String[] tokens) {
       //creating a stack 
       Stack<Integer> stack=new Stack<>();
       /*if an operator is encountered, popped two operands and calculated  accordingly and pushed back into the stack.*/
        for(String token:tokens)
        {
            switch(token){
                case "+":
                stack.push(stack.pop()+stack.pop());
                break;
                case "-":
                stack.push(-stack.pop()+stack.pop());
                break;
                case "*":
                stack.push(stack.pop()*stack.pop());
                break;
                case "/":
                int divisor=stack.pop();
                stack.push(stack.pop()/divisor);
                break;
                default:
                stack.push(Integer.parseInt(token));
                break;
            }

        }
        return stack.pop();
    }
}
